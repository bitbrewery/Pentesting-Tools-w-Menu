from scapy.all import ARP, Ether, srp
from mac_vendor_lookup import MacLookup
import socket

def runnetscanner():
    # Initialize the MacLookup object
    mac_lookup = MacLookup()

    # Update the vendors list
    try:
        print("Updating MAC Vendors ...")
        mac_lookup.update_vendors()
        print("MAC Vendors Update Complete")
    except Exception as e:
        print(f"Failed to update vendors list: {e}")

    # Specify the IP range
    target_ip = input("Input the target IP range (e.g. 192.168.1.1/24): ")

    # Create an ARP packet
    print("Creating ARP Packet ...")
    arp = ARP(pdst=target_ip)
    
    # Create the Ether broadcast packet
    print("Creating Ether Broadcast Packet")
    ether = Ether(dst="ff:ff:ff:ff:ff:ff")

    # Stack them
    print("Stacking Packets")
    packet = ether/arp

    try:
        # Send the packet and receive responses
        print("Sending Packets")
        result = srp(packet, timeout=3, verbose=0)[0]
    except Exception as e:
        print(f"An error occurred while sending the packet: {e}")
        exit(1)

    # A list of clients, we will fill this in the upcoming loop
    clients = []

    for sent, received in result:
        vendor = "Unknown"
        device_type = "Unknown"
        try:
            vendor = mac_lookup.lookup(received.hwsrc)
        except Exception:
            pass
        if received.hwsrc[:6] == "00:0c:29":
            device_type = "VMWare"
        elif received.hwsrc[:6] == "00:1c:14":
            device_type = "Apple"
        clients.append({'ip': received.psrc, 'mac': received.hwsrc, 'vendor': vendor, 'device_type': device_type})

    # Print clients
    print(f"{'IP':<16}{'MAC':<18}{'VENDOR':<16}{'DEVICE TYPE':<18}")
    for client in clients:
        print(f"{client['ip']:<16}{client['mac']:<18}{client['vendor'][:16]:<16}{client['device_type']:<18}")
    input("Press Enter to continue ...")