import subprocess
import concurrent.futures
from ipaddress import ip_address


def ping_sweep(ip):
    try:
        subprocess.check_output("ping -c 1 -W 1 " + ip, shell=True)
        return (ip, f"{ip} is up.")
    except Exception:
        return (ip, f"{ip} is down.")


# Get the network prefix
prefix = input("Enter the network prefix (e.g., 192.168.1.): ")

# Check if the prefix ends with a period
if not prefix.endswith("."):
    prefix += "."

while True:
    # Get the starting and ending numbers
    start_num = input("Enter the starting number: ")
    end_num = input("Enter the ending number: ")

    # Check if the inputs are valid integers
    if start_num.isdigit() and end_num.isdigit():
        start_num = int(start_num)
        end_num = int(end_num)

        # Check if the range is valid
        if start_num > 0 and end_num > start_num:
            break

    print("Invalid range. Please enter again.")

# Generate the list of target IPs
target_ips = [f"{prefix}{i}" for i in range(start_num, end_num + 1)]

# Use a ThreadPoolExecutor to send pings to multiple IP addresses simultaneously
results = []
with concurrent.futures.ThreadPoolExecutor() as executor:
    futures = {executor.submit(ping_sweep, ip): ip for ip in target_ips}
    for future in concurrent.futures.as_completed(futures):
        results.append((futures[future], future.result()))

# Sort the results by the IP addresses
results.sort(key=lambda x: tuple(int(n) for n in ip_address(x[0]).exploded.split(".")))

# Print the results
for result in results:
    print(result[1][1])
