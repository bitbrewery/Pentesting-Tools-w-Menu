import hashlib
import time
import os


def dictionary_crack_password():
    # Prompt the user for the hashed password
    hashed_password = input("Enter the hashed password: ")

    # Get a list of all files in the passwordLists directory
    password_lists = os.listdir("passwordCracking/passwordLists/")

    # Print the list of files
    print("\nSelect a password list:")
    for i, file in enumerate(password_lists, 1):
        print(f"{i}. {file}")

    # Ask the user to enter a number to select a file
    selected_number = (
        int(input("\nEnter the number corresponding to the password list: ")) - 1
    )

    # Use the selected file as the dictionary path
    dictionary_path = (
        f"passwordCracking/passwordLists/{password_lists[selected_number]}"
    )

    # Initialize the counter and the timer
    attempts = 0
    start_time = time.time()
    password_found = False

    # Menu for the user to select the hash type
    print("Select the hash type:")
    print("1. MD5")
    print("2. SHA1")
    print("3. SHA256")
    print("4. SHA512")

    hash_type = input("Enter the number corresponding to the hash type: ")

    # Read the dictionary file into a list
    with open(dictionary_path, "r", encoding="latin-1") as file:
        words = [line.strip() for line in file]

    for word in words:
        word = word.strip()  # Remove trailing newline

        # Hash the word using the selected hash type
        if hash_type == "1":
            hashed_word = hashlib.md5(word.encode()).hexdigest()
        elif hash_type == "2":
            hashed_word = hashlib.sha1(word.encode()).hexdigest()
        elif hash_type == "3":
            hashed_word = hashlib.sha256(word.encode()).hexdigest()
        elif hash_type == "4":
            hashed_word = hashlib.sha512(word.encode()).hexdigest()

        # Increment the counter
        attempts += 1

        if hashed_word == hashed_password:
            print(f"Password found: {word}")
            password_found = True
            break

    # Calculate the elapsed time
    elapsed_time = time.time() - start_time

    print(f"Time taken: {elapsed_time} seconds")
    print(f"Attempts made: {attempts}")

    if not password_found:
        print("Password not found in the dictionary.")

    exit = input("Press Enter To Exit ...")